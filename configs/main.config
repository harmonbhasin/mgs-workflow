/************************************************
| CONFIGURATION FILE FOR NAO VIRAL MGS WORKFLOW |
************************************************/

/*************
| PARAMETERS |
*************/

params {
    // Reference directories
    s3_dir = "s3://nao-mgs-workflow-scratch/NAO-230926Esv-head"
    raw_dir = "${params.s3_dir}/raw" // Raw data directory
    pub_dir = "${params.s3_dir}/output" // Publication directory
    script_dir = "${projectDir}/scripts" // Directory containing built-in scripts

    // Path to TSV specifying sample/library configuration
    library_tab = "${projectDir}/ref/libraries.csv"

    // Path to adapter sequences for adapter trimming (in addition to auto-removal)
    adapters = "${projectDir}/ref/adapters.fa"

    // References and indexes (normally generated by index workflow)
    ref_dir = "s3://nao-mgs-workflow-scratch/ref/output/output"
    ribo_db = "${params.ref_dir}/ribo-ref-concat.fasta.gz" // Path to rRNA reference file for ribodepletion
    human_index = "${params.ref_dir}/human-ref-index.tar.gz" // Path to human BBMap reference tarball
    other_index = "${params.ref_dir}/other-ref-index.tar.gz" // Path to BBMap reference tarball for contaminant taxa
    hv_index = "${params.ref_dir}/bt2-hv-index.tar.gz" // Bowtie2 index tarball for human-infecting virus genomes
    genomeid_map = "${params.ref_dir}/genomeid-to-taxid.json" // File mapping human-viral NCBI genome ids to taxids
    nodes = "${params.ref_dir}/taxonomy-nodes.dmp" // File specifying taxid tree structure
    hv_db = "${params.ref_dir}/human-viruses.tsv" // TSV file containing a list of human-infecting virus names and taxids
    kraken_db = "${params.ref_dir}/kraken-db.tar.gz" // Path to tarball containing Kraken reference DB
}

workDir = "${params.s3_dir}/work"

/********************
| AWS CONFIGURATION |
********************/

aws {
    client {
        maxConnections = 1000
        maxErrorRetry = 10
        connectionTimeout = 0
        socketTimeout = 0
    }
}

docker {
    enabled = true
}

fusion {
    enabled = true
    exportStorageCredentials = true
}

wave {
    enabled = true
}

/*************************
| PROCESS SPECIFICATIONS |
*************************/

process{
    errorStrategy = "finish" // When a process fails, finish other pending jobs before shutdown

    // Single-core processes
    withLabel: single {
        cpus = 1
        memory = 1.GB
    }

    // Small multi-core processes
    withLabel: small {
        cpus = 7
        memory = 15.GB 
    }

    // Large multi-core processes
    withLabel: large {
        cpus = 15
        memory = 31.GB
    }

    // Maximum-scope, one-at-a-time processes
    withLabel: max {
        cpus = 31
        memory = 61.GB
    }

    // Docker images
    withLabel: base {
        container = "amazonlinux:latest"
    }
    withLabel: MultiQC {
        container = "multiqc/multiqc:latest"
    }
    withLabel: FASTQC {
        container = "staphb/fastqc:latest"
    }
    withLabel: BBTools {
        container = "staphb/bbtools:latest"
    }
    withLabel: BLAST {
        container = "staphb/blast:latest"
    }
    withLabel: Bowtie2 {
        container = "staphb/bowtie2:latest"
    }
    withLabel: Kraken2 {
        container = "staphb/kraken2:latest"
    }
    withLabel: Bracken {
        container = "staphb/bracken:latest"
    }
    withLabel: pandas {
        container = "pandas/pandas:pip-all"
    }
    withLabel: biopython {
        container = "securebio/nao-pypkg"
    }
    withLabel: tidyverse {
        container = "rocker/tidyverse:latest"
    }
    withLabel: R {
        container = "securebio/nao-rpkg"
    }
}
