/************************************************
| CONFIGURATION FILE FOR NAO VIRAL MGS WORKFLOW |
************************************************/

/*************
| PARAMETERS |
*************/

params {
    // Reference directories
    raw_dir = "raw" // Raw data directory
    script_dir = "scripts" // Directory containing built-in scripts
    env_dir = "env" // Directory containing conda environment specifications
    
    // Path to TSV specifying sample/library configuration
    library_tab = "libraries.csv"
    // TODO: Add another tab for metadata?
    
    // Reference sequence files
    adapters = "ref/adapters.fa" // Sequencing adaptors to remove during cleaning (in addition to auto-removal)
    ribo_ref = "ref/silva-rrna.fasta.gz" // Database of ribosomal sequences to screen for with BBDuk
    human_ref = "ref/human-genome-chm13v2.0.fa.gz" // Human genome reference // TODO: Replace with URL
    cow_ref = "ref/cow-genome-GCF_002263795.1.fa.gz" // Cow genome reference // TODO: Replace with URL
    pig_ref = "ref/pig-genome-GCF_000003025.6.fa.gz" // Pig genome reference // TODO: Replace with URL
    hv_genomes = "ref/hv_virus_combined_genomes.fasta.gz" // Combined human-viral genomes // TODO: Replace with URL or generate automatically

    // Other reference files
    kraken_db = "ref/kraken-db" // Directory containing Kraken reference database
    virus_db = "ref/human-viruses.tsv" // TSV file containing a list of human-infecting virus names and taxids
    nodes = "ref/taxonomy/nodes.dmp" // File specifying taxid tree structure
    genomeid_map = "ref/genomeid-to-taxid.json" // File mapping human-viral NCBI genome ids to taxids (generated alongside hv_genomes) // TODO: Replace with URL or generate automatically

}

// TODO: Add more configuration for process parameters

/**********************
| CONDA CONFIGURATION |
**********************/

conda {
    enabled = true
    useMicromamba = true
}

/*************************
| PROCESS SPECIFICATIONS |
*************************/

process{
    errorStrategy = "finish" // When a process fails, finish other pending jobs before shutdown

    // Single-core processes
    withLabel: single {
        cpus = 1
        memory = 1.GB
    }

    // Small multi-core processes
    withLabel: small {
        cpus = 7
        memory = 15.GB 
    }

    // Large multi-core processes
    withLabel: large {
        cpus = 16
        memory = 31.GB
    }

    // Maximum-scope, one-at-a-time processes
    withLabel: max {
        cpus = 31
        memory = 63.GB
    }

}
